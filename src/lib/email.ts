import nodemailer from 'nodemailer'

export interface EmailData {
  weddingTitle: string
  coupleEmail: string
  coupleNames: string
  guestName: string
  message?: string
  attachments: {
    filename: string
    content: Buffer
    contentType: string
  }[]
}

const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: 'spodelim@gmail.com',
    pass: 'rkpw xvmf gezf iktv'
  },
  connectionTimeout: 60000,
  greetingTimeout: 30000,
  socketTimeout: 60000,
})

export async function sendWeddingMoment(data: EmailData) {
  const { weddingTitle, coupleEmail, coupleNames, guestName, message, attachments } = data
  
  console.log('üìß –ó–∞–ø–æ—á–Ω—É–≤–∞–º –¥–∞ –∏—Å–ø—Ä–∞—ú–∞–º –º–µ—ò–ª...')
  console.log('üìß –î–æ:', coupleEmail)
  console.log('üë§ –û–¥ –≥–æ—Å—Ç:', guestName)
  console.log('üìé –ë—Ä–æ—ò –Ω–∞ –ø—Ä–∏–∫–∞—á—É–≤–∞—ö–∞:', attachments.length)
  
  let totalAttachmentSize = 0
  attachments.forEach((att, i) => {
    const sizeMB = Math.round(att.content.length / 1024 / 1024 * 100) / 100
    totalAttachmentSize += att.content.length
    console.log(`üìÑ Attachment ${i+1}: ${att.filename} (${sizeMB}MB)`)
  })
  
  const totalMB = Math.round(totalAttachmentSize / 1024 / 1024 * 100) / 100
  console.log(`üìä –í–∫—É–ø–µ–Ω —Ä–∞–∑–º–µ—Ä: ${totalMB}MB`)
  
  const emailContent = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <div style="background: linear-gradient(135deg, #d97706, #f59e0b); padding: 20px; text-align: center; border-radius: 8px 8px 0 0;">
        <h1 style="color: white; margin: 0; font-size: 24px;">üéâ –ù–æ–≤ –º–æ–º–µ–Ω—Ç –æ–¥ –≤–∞—à–∏–æ—Ç –Ω–∞—Å—Ç–∞–Ω!</h1>
      </div>
      
      <div style="background: white; padding: 30px; border-radius: 0 0 8px 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
        <h2 style="color: #333; margin-top: 0;">–ü–æ—á–∏—Ç—É–≤–∞–Ω–∏ ${coupleNames},</h2>
        
        <p style="color: #666; font-size: 16px; line-height: 1.6;">
          <strong>${guestName}</strong> —Å–ø–æ–¥–µ–ª–∏ –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω –º–æ–º–µ–Ω—Ç –æ–¥ –≤–∞—à–∏–æ—Ç –Ω–∞—Å—Ç–∞–Ω "${weddingTitle}"!
        </p>
        
        ${message ? `
          <div style="background: #fef3c7; padding: 15px; border-left: 4px solid #f59e0b; margin: 20px 0;">
            <p style="margin: 0; font-style: italic; color: #555;">
              "${message}"
            </p>
          </div>
        ` : ''}
        
        <div style="background: #f9fafb; padding: 20px; border-radius: 8px; margin: 20px 0; border: 1px solid #e5e7eb;">
          <h3 style="color: #333; margin-top: 0; color: #d97706;">üìé –ü—Ä–∏–∫–∞—á–µ–Ω–∏ –¥–∞—Ç–æ—Ç–µ–∫–∏ (${totalMB}MB):</h3>
          <ul style="color: #666; margin: 0; padding-left: 20px;">
            ${attachments.map(att => {
              const sizeMB = Math.round(att.content.length / 1024 / 1024 * 100) / 100
              return `<li style="margin: 5px 0;">${att.filename} (${sizeMB}MB)</li>`
            }).join('')}
          </ul>
        </div>
        
        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
          <p style="color: #888; font-size: 14px; margin: 0;">
            –ò—Å–ø—Ä–∞—Ç–µ–Ω–æ –æ–¥ –°–ø–æ–¥–µ–ª–∏–ú–æ–º–µ–Ω—Ç–∏ –∞–ø–ª–∏–∫–∞—Ü–∏—ò–∞—Ç–∞<br>
            <span style="color: #d97706; font-weight: 600;">‚ú® –°–ø–æ–º–µ–Ω–∏ —à—Ç–æ —Ç—Ä–∞–∞—Ç –∑–∞—Å–µ–∫–æ–≥–∞—à ‚ú®</span>
          </p>
        </div>
      </div>
    </div>
  `

  try {
    console.log('üöÄ –ü–æ–≤–∏–∫—É–≤–∞–º Gmail...')
    
    const result = await transporter.sendMail({
      from: '"–°–ø–æ–¥–µ–ª–∏ –ú–æ–º–µ–Ω—Ç–∏" <spodelim@gmail.com>',
      to: coupleEmail,
      subject: `‚ú® ${guestName} —Å–ø–æ–¥–µ–ª–∏ –º–æ–º–µ–Ω—Ç –æ–¥ –≤–∞—à–∏–æ—Ç –Ω–∞—Å—Ç–∞–Ω "${weddingTitle}"`,
      html: emailContent,
      attachments: attachments.map(att => ({
        filename: att.filename,
        content: att.content,
        contentType: att.contentType
      }))
    })

    console.log('‚úÖ Gmail –æ–¥–≥–æ–≤–æ—Ä–∏ —É—Å–ø–µ—à–Ω–æ')
    console.log('üìß Message ID:', result.messageId)
    
    return { success: true, messageId: result.messageId }
  } catch (error) {
    console.error('üí• Gmail –≥—Ä–µ—à–∫–∞:', error)
    
    let errorMessage = '–ù–µ–ø–æ–∑–Ω–∞—Ç–∞ –≥—Ä–µ—à–∫–∞'
    if (error instanceof Error) {
      if (error.message.includes('Message too large')) {
        errorMessage = '–ú–µ—ò–ª–æ—Ç –µ –ø—Ä–µ–≥–æ–ª–µ–º –∑–∞ Gmail (–Ω–∞–¥ 25MB)'
      } else if (error.message.includes('timeout')) {
        errorMessage = 'Timeout –ø—Ä–∏ –∏—Å–ø—Ä–∞—ú–∞—ö–µ'
      } else {
        errorMessage = error.message
      }
    }
    
    return { success: false, error: errorMessage }
  }
}