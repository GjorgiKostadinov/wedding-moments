import { NextRequest, NextResponse } from 'next/server'
import { getWeddingBySlug } from '@/lib/wedding-data'
import { sendWeddingMoment } from '@/lib/email'

export async function POST(request: NextRequest) {
  console.log('üîµ API –ø–æ–≤–∏–∫ –∑–∞–ø–æ—á–Ω–∞—Ç...')
  
  try {
    const formData = await request.formData()
    
    const weddingSlug = formData.get('weddingSlug') as string
    const guestName = formData.get('guestName') as string
    const message = formData.get('message') as string
    const files = formData.getAll('files') as File[]

    console.log('üìß Wedding slug:', weddingSlug)
    console.log('üë§ Guest name:', guestName)
    console.log('üíå Message:', message || '–ù–µ–º–∞ –ø–æ—Ä–∞–∫–∞')
    console.log('üìÅ Files count:', files.length)

    // –í–∞–ª–∏–¥–∞—Ü–∏—ò–∞
    if (!weddingSlug || !guestName || files.length === 0) {
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—Å–∫–∞ –≥—Ä–µ—à–∫–∞ - –Ω–µ–¥–æ—Å—Ç–∞—Å—É–≤–∞–∞—Ç –ø–æ–ª–∏—ö–∞')
      return NextResponse.json(
        { success: false, error: '–ù–µ–¥–æ—Å—Ç–∞—Å—É–≤–∞–∞—Ç –ø–æ—Ç—Ä–µ–±–Ω–∏ –ø–æ–ª–∏—ö–∞' },
        { status: 400 }
      )
    }

    // –ù–∞—ò–¥–∏ —ò–∞ —Å–≤–∞–¥–±–∞—Ç–∞
    console.log('üîç –ë–∞—Ä–∞–º —Å–≤–∞–¥–±–∞ —Å–æ slug:', weddingSlug)
    const wedding = await getWeddingBySlug(weddingSlug)
    if (!wedding) {
      console.log('‚ùå –°–≤–∞–¥–±–∞—Ç–∞ –Ω–µ –µ –ø—Ä–æ–Ω–∞—ò–¥–µ–Ω–∞')
      return NextResponse.json(
        { success: false, error: '–°–≤–∞–¥–±–∞—Ç–∞ –Ω–µ –µ –ø—Ä–æ–Ω–∞—ò–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –µ –∞–∫—Ç–∏–≤–Ω–∞' },
        { status: 404 }
      )
    }

    console.log('‚úÖ –°–≤–∞–¥–±–∞ –ø—Ä–æ–Ω–∞—ò–¥–µ–Ω–∞:', wedding.title)
    console.log('üìß Couple email:', wedding.coupleEmail)

    // –ü—Ä–æ—Ü–µ—Å–∏—Ä–∞—ò –≥–∏ —Ñ–∞–π–ª–æ–≤–∏—Ç–µ (–ë–ï–ó –†–ê–ó–ú–ï–†–ù–û –û–ì–†–ê–ù–ò–ß–£–í–ê–ä–ï)
    console.log('üìé –ü—Ä–æ—Ü–µ—Å–∏—Ä–∞–º —Ñ–∞—ò–ª–æ–≤–∏...')
    const attachments = []
    for (const file of files) {
      console.log(`üìÑ –û–±—Ä–∞–±–æ—Ç—É–≤–∞–º: ${file.name} (${Math.round(file.size / 1024)}KB)`)
      
      const buffer = Buffer.from(await file.arrayBuffer())
      attachments.push({
        filename: file.name,
        content: buffer,
        contentType: file.type
      })
    }

    console.log('‚úÖ –°–∏—Ç–µ —Ñ–∞—ò–ª–æ–≤–∏ —Å–µ –æ–±—Ä–∞–±–æ—Ç–µ–Ω–∏')

    // –ò—Å–ø—Ä–∞—Ç–∏ –º–µ—ò–ª
    console.log('üì§ –ò—Å–ø—Ä–∞—ú–∞–º –º–µ—ò–ª...')
    const result = await sendWeddingMoment({
      weddingTitle: wedding.title,
      coupleEmail: wedding.coupleEmail,
      coupleNames: wedding.coupleNames,
      guestName,
      message: message || undefined,
      attachments
    })

    console.log('üì¨ –†–µ–∑—É–ª—Ç–∞—Ç –æ–¥ –º–µ—ò–ª:', result)

    if (result.success) {
      console.log('üéâ –ú–µ—ò–ª —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞—Ç–µ–Ω!')
      return NextResponse.json({ 
        success: true, 
        message: '–ú–æ–º–µ–Ω—Ç–∞ –µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞—Ç–µ–Ω!',
        messageId: result.messageId 
      })
    } else {
      console.log('‚ùå –ú–µ—ò–ª –Ω–µ –µ –∏—Å–ø—Ä–∞—Ç–µ–Ω:', result.error)
      return NextResponse.json(
        { success: false, error: result.error },
        { status: 500 }
      )
    }

  } catch (error) {
    console.error('üí• API Error:', error)
    return NextResponse.json(
      { success: false, error: '–í–Ω–∞—Ç—Ä–µ—à–Ω–∞ –≥—Ä–µ—à–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–æ—Ç' },
      { status: 500 }
    )
  }
}